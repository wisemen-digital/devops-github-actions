---
name: Add tag to Docker image

#
# Used for retagging a Docker image, such as when promoting a tag from
# "development" to "staging".
#
# Some notes:
# - Will fallback to docker hub registry (if none is provided)
# - Image name will default to the current repository name
#

on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      container-registry:
        description: Container registry endpoint (fallback to Docker Hub)
        required: false
        type: string
      image:
        description: Image name (fallback to repository name)
        required: false
        type: string
      source-tag:
        description: Source image tag
        required: true
        type: string
      target-tag:
        description: Target (new) image tag
        required: true
        type: string
    secrets:
      CONTAINER_REGISTRY_USERNAME:
        description: Container registry username ('nologin' for Scaleway)
        required: true
      CONTAINER_REGISTRY_PASSWORD:
        description: Container registry password (secret key for Scaleway)
        required: true
    outputs:
      manifest:
        description: Image manifest (registry + image + tag)
        value: ${{ jobs.build-and-push.outputs.manifest }}

jobs:
  tag:
    name: Add tag to image
    runs-on: ubuntu-latest
    outputs:
      manifest: ${{ env.container_registry }}/${{ env.image }}:${{ inputs.target-tag }}
    steps:
      - name: Prepare environment
        run: |
          echo "container_registry=${{ inputs.container-registry || 'docker.io' }}" >> "$GITHUB_ENV"
          echo "image=`basename ${{ inputs.image || github.repository }}`" >> "$GITHUB_ENV"
      - name: Login to custom registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.container_registry }}
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Re-tag image
        run: docker buildx imagetools create "$source_manifest" --tag "$target_manifest"
        env:
          source_manifest: ${{ env.container_registry }}/${{ env.image }}:${{ inputs.source-tag }}
          target_manifest: ${{ env.container_registry }}/${{ env.image }}:${{ inputs.target-tag }}

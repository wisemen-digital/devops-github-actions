---
name: Build & deploy to environment (Scaleway)

#
# Build the docker image, and deploy it to the given environment.
#

on:
  workflow_call:
    # Depends on the following vars
    # - CONTAINER_PLATFORMS
    # - CONTAINER_REGISTRY_ENDPOINT
    # - K8S_CLUSTER_ID
    # - K8S_DEPLOYMENTS
    # - K8S_LABELS
    # - K8S_NAMESPACE
    # - SCALEWAY_ORGANIZATION_ID
    # - SCALEWAY_PROJECT_ID
    # - SCALEWAY_REGION
    inputs:
      environment:
        description: Target environment to deploy to
        type: string
        required: true
      image:
        description: Image name (fallback to repository name)
        type: string
        required: false
      monorepo-deployments:
        description: List of projects to roll out (folders), separated by commas
        type: string
        required: false
      # Legacy parameters
      cluster-deployments:
        description: UNUSED
        required: false
        type: string
      scaleway-container-registry:
        description: UNUSED
        required: false
        type: string
      scaleway-organization-id:
        description: UNUSED
        required: false
        type: string
      scaleway-project-id:
        description: UNUSED
        required: false
        type: string
      scaleway-region:
        description: UNUSED
        required: false
        type: string
      scaleway-cluster-id:
        description: UNUSED
        required: false
        type: string
    secrets:
      SCALEWAY_ACCESS_KEY:
        description: Scaleway API key ID
        required: true
      SCALEWAY_SECRET_KEY:
        description: Scaleway API key secret
        required: true

jobs:
  generate-matrix:
    name: Generate job matrices
    runs-on: ubuntu-latest
    outputs:
      deployments: ${{ steps.monorepo-matrix.outputs.matrix || steps.simple-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github
      - name: Monorepo Matrix check
        id: monorepo-matrix
        if: hashFiles('.github/monorepo-rollout-filters.yaml') != ''
        uses: wisemen-digital/devops-ga-changed-paths-filter@main
        with:
          filter-file: .github/monorepo-rollout-filters.yaml
          changes-override: ${{ inputs.monorepo-deployments}}
          output-key-name: variant
      - name: Simple Matrix check
        id: simple-matrix
        if: hashFiles('.github/monorepo-rollout-filters.yaml') == ''
        run: echo "matrix=$(echo '[{"variant":"","path":""}]' | jq -c)" >> $GITHUB_OUTPUT;
  build-and-deploy:
    name: Build to
    needs: [generate-matrix]
    if: ${{ needs.generate-matrix.outputs.deployments != '[]' }}
    strategy:
      matrix:
        path: ${{ fromJson(needs.generate-matrix.outputs.deployments) }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Prepare environment
        run: |
          echo "image=`basename ${{ inputs.image || github.repository }}`" >> "$GITHUB_ENV"
      - name: Docker build & push
        uses: wisemen-digital/devops-ga-docker-build-push@main
        with:
          container-registry: ${{ vars.CONTAINER_REGISTRY_ENDPOINT }}
          container-registry-username: nologin
          container-registry-password: ${{ secrets.SCALEWAY_SECRET_KEY }}
          github-access-token: ${{ secrets.GITHUB_TOKEN }}
          image: ${{ env.image }}
          image-suffix: ${{ matrix.path.variant }}
          tag: ${{ inputs.environment }}
          platforms: ${{ vars.CONTAINER_PLATFORMS }}
          target: ${{ matrix.path.variant }}
          build-argument: BUILD_TARGET=${{ matrix.path.variant }}
      - name: Rollout on cluster
        uses: wisemen-digital/devops-ga-k8s-rollout@main
        with:
          vendor: scaleway
          cluster-id: ${{ vars.K8S_CLUSTER_ID }}
          rollout-deployments: ${{ vars.K8S_DEPLOYMENTS }}
          rollout-labels: ${{ vars.K8S_LABELS }}
          rollout-labels-suffix: ${{ matrix.path.variant }}
          rollout-namespace: ${{ vars.K8S_NAMESPACE }}
          scaleway-organization-id: ${{ vars.SCALEWAY_ORGANIZATION_ID }}
          scaleway-project-id: ${{ vars.SCALEWAY_PROJECT_ID }}
          scaleway-region: ${{ vars.SCALEWAY_REGION }}
          scaleway-access-key: ${{ secrets.SCALEWAY_ACCESS_KEY }}
          scaleway-secret-key: ${{ secrets.SCALEWAY_SECRET_KEY }}

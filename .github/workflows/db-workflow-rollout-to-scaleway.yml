---
name: Rollout database instance (Scaleway)

#
# Check what's changed (via filters, or provide your own list) and roll it out.
#

on:
  workflow_call:
    # Depends on the following vars
    # - SCALEWAY_REGION
    inputs:
      # bucket info
      rdb-instance-deployments:
        description: List of rdb instances to roll out (folders), separated by commas
        required: false
        type: string
      rdb-instance-volume-type:
        description: Type of volume where data is stored (lssd, bssd, sbs_5k, sbs_15k)
        required: false
        default: 'sbs_5k'
        type: string
      rdb-instance-node-type:
        description: "Type of node to use for the Database Instance (Ex: DB-PLAY2-PICO)"
        required: false
        default: 'DB-PLAY2-PICO'
        type: string
      rdb-instance-volume-size:
          description: Volume size when volume_type is not lssd
          required: false
          default: '10GB'
          type: string
      rdb-instance-engine:
          description: Database engine of the Database Instance (PostgreSQL, MySQL, ...)
          required: false
          default: 'PostgreSQL-15'
          type: string
    secrets:
      SCALEWAY_ACCESS_KEY:
        description: Scaleway API key ID
        required: true
      SCALEWAY_SECRET_KEY:
        description: Scaleway API key secret
        required: true

jobs:
  generate-matrix:
    name: Generate job matrices
    runs-on: ubuntu-latest
    outputs:
      deployments: ${{ steps.changed-paths-filter.outputs.matrix }}
    steps:
      - name: Generate Matrix
        id: changed-paths-filter
        uses: wisemen-digital/devops-ga-changed-paths-filter@main
        with:
          filter-file: .github/db-rollout-filters.yaml
          changes-override: ${{ inputs.rdb-instance-deployments }}

  rollout-to-db:
    name: Rollout to db
    needs: [generate-matrix]
    strategy:
      matrix:
        deployment: ${{ fromJson(needs.generate-matrix.outputs.deployments) }}
    if: ${{ needs.generate-matrix.outputs.deployments != '[]' }}
    runs-on: ubuntu-latest
    environment: ${{ matrix.deployment.environment }}
    steps:
      - name: Setup SCW CLI
        uses: scaleway/action-scw@v0
        with:
          save-config: true
          version: v2.24.0
          access-key: ${{ secrets.SCALEWAY_ACCESS_KEY }}
          secret-key: ${{ secrets.SCALEWAY_SECRET_KEY }}
          default-project-id: ${{ vars.SCALEWAY_PROJECT_ID }}
          default-organization-id: ${{ vars.SCALEWAY_ORGANIZATION_ID }}
      - name: Perform database check
        run: |
          id=$(scw rdb instance list name='${{ matrix.deployment.path }}' -o json | jq -r '.[] | select(.name == "${{ matrix.deployment.path }}") | .id')
          if [ -z "$id" ]; then
            scw rdb instance create name=${{ matrix.deployment.path }} engine=${{ inputs.rdb-instance-engine }} user-name=admin generate-password=true node-type=${{ inputs.rdb-instance-node-type }} volume-type=${{ inputs.rdb-instance-volume-type }} volume-size=${{ inputs.rdb-instance-volume-size }};
          else
            echo 'DB already exists'
          fi

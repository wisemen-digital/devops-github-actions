---
name: Build & deploy to environment (DigitalOcean)

#
# Build the docker image, and deploy it to the given environment.
#

on:
  workflow_call:
    # Depends on the following vars
    # - CONTAINER_PLATFORMS
    # - CONTAINER_REGISTRY_ENDPOINT
    # - K8S_CLUSTER_ID
    # - K8S_DEPLOYMENTS
    # - K8S_LABELS
    # - K8S_NAMESPACE
    inputs:
      environment:
        description: Target environment to deploy to
        type: string
        required: true
      image:
        description: Image name (fallback to repository name)
        type: string
        required: false
      image-variants:
        description: List of variants to build (folders in monorepo), separated by commas
        type: string
        required: false
    secrets:
      DIGITALOCEAN_API_USER:
        description: DigitalOcean user email
        required: true
      DIGITALOCEAN_API_TOKEN:
        description: DigitalOcean API token
        required: true

jobs:
  generate-matrix:
    name: Generate job matrices
    runs-on: ubuntu-latest
    outputs:
      variants: ${{ steps.monorepo.outputs.matrix || steps.normalrepo.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github
      - name: Monorepo Matrix check
        id: monorepo
        if: hashFiles('.github/monorepo-rollout-filters.yaml') != ''
        uses: wisemen-digital/devops-ga-changed-paths-filter@main
        with:
          filter-file: .github/monorepo-rollout-filters.yaml
          changes-override: ${{ inputs.image-variants }}
      - name: Normal Repo Fallback
        id: normalrepo
        if: hashFiles('.github/monorepo-rollout-filters.yaml') == ''
        run: echo 'matrix=[{"environment":"","path":""}]' >> $GITHUB_OUTPUT;

  build-and-deploy:
    name: Build & Deploy to ${{ inputs.environment }}
    needs: [generate-matrix]
    if: ${{ needs.generate-matrix.outputs.variants != '[]' }}
    strategy:
      matrix:
        variant: ${{ fromJson(needs.generate-matrix.outputs.variants) }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Prepare environment
        run: |
          echo "image=`basename ${{ inputs.image || github.repository }}`" >> "$GITHUB_ENV"
          if [ -z "${{ matrix.variant.path }}" ]; then
            echo "image_suffix=" >> "$GITHUB_ENV"
            echo "rollout_labels=${{ vars.K8S_LABELS }}" >> "$GITHUB_ENV"
          else
            echo "image_suffix=-${{ matrix.variant.path }}" >> "$GITHUB_ENV"
            echo "rollout_labels=${{ vars.K8S_LABELS }},variant=${{ matrix.variant.path }}" >> "$GITHUB_ENV"
          fi
      - name: Docker build & push
        uses: wisemen-digital/devops-ga-docker-build-push@main
        with:
          container-registry: ${{ vars.CONTAINER_REGISTRY_ENDPOINT }}
          container-registry-username: ${{ secrets.DIGITALOCEAN_API_USER }}
          container-registry-password: ${{ secrets.DIGITALOCEAN_API_TOKEN }}
          github-access-token: ${{ secrets.GITHUB_TOKEN }}
          image: ${{ env.image }}${{ env.image_suffix }}
          tag: ${{ inputs.environment }}
          platforms: ${{ vars.CONTAINER_PLATFORMS }}
          target: ${{ matrix.variant.path }}
      - name: Rollout on cluster
        uses: wisemen-digital/devops-ga-k8s-rollout@main
        with:
          vendor: digitalocean
          cluster-id: ${{ vars.K8S_CLUSTER_ID }}
          rollout-deployments: ${{ vars.K8S_DEPLOYMENTS }}
          rollout-labels: ${{ env.rollout_labels }}
          rollout-namespace: ${{ vars.K8S_NAMESPACE }}
          digitalocean-api-token: ${{ secrets.DIGITALOCEAN_API_TOKEN }}
